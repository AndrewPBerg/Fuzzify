version: "3.8"  # Add this line if it's missing

services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      pubsub:
        condition: service_healthy
    environment:
      DB_URL: "mysql+mysqlconnector://user:password@db:3306/mydatabase"
      PUBSUB_EMULATOR_HOST: "pubsub:8085"
      PUBSUB_PROJECT_ID: "local-project"
      PYTHONUNBUFFERED: 1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "10002:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NEXT_PUBLIC_API_URL: "http://localhost:10002"

  db:  # Fix indentation if this was misaligned
    image: mysql:8.0  # Ensure MySQL is version 8.0
    ports:
      - "3306:3306"
    command: --port=3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  pubsub:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    platform: linux/amd64
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085
    ports:
      - "8085:8085"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8085"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mysql_data:
