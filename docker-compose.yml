version: "3.9"

services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "10001:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      pubsub:
        condition: service_started
    env_file:
      - ./backend/.env  # ðŸ‘ˆ Load env vars from backend/.env
    environment:
      PYTHONUNBUFFERED: 1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "10002:10002"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NODE_ENV: "development"
      NEXT_TELEMETRY_DISABLED: "1"
      NEXT_PUBLIC_API_URL: "http://localhost:10001"
      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
      WDS_SOCKET_HOST: "127.0.0.1"
      WDS_SOCKET_PORT: "10002"
    networks:
      - app-network

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dnstwist_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-P", "3306", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  pubsub:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    platform: linux/amd64
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085
    ports:
      - "8085:8085"
    networks:
      - app-network

  hero:
    build:
      context: ./hero-page
      dockerfile: Dockerfile
      target: builder
    ports:
      - "10003:10003"
    volumes:
      - ./hero-page:/app
      - /app/node_modules
      - /app/.next
    command: ["pnpm", "dev"]
    environment:
      NODE_ENV: "development"
      NEXT_TELEMETRY_DISABLED: "1"
      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
    networks:
      - app-network

volumes:
  mysql_data:
    name: mysql_data

networks:
  app-network:
    driver: bridge
