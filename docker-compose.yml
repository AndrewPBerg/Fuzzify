services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "10001:8000"  # Ensure backend listens on correct port
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      pubsub:
        condition: service_started
    environment:
      DB_URL: "mysql+mysqlconnector://user:password@db:3306/mydatabase"
      PUBSUB_EMULATOR_HOST: "pubsub:8085"
      PUBSUB_PROJECT_ID: "local-project"
      PYTHONUNBUFFERED: 1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s  # Increased interval to give more time for startup
      timeout: 10s   # Increased timeout
      retries: 5     # Increased retries
      start_period: 15s  # Added start period to allow for initialization

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "10002:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NEXT_PUBLIC_API_URL: "http://backend:8000"
      NODE_ENV: "development"
      NEXT_TELEMETRY_DISABLED: "1"

  db:
    image: mysql:8.0  # Ensure MySQL is version 8.0
    command: --port=3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-P", "3306", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 3

  pubsub:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    platform: linux/amd64
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085
    ports:
      - "8085:8085"

volumes:
  mysql_data: